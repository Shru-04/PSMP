# Generated by Django 3.2.9 on 2021-12-13 07:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('Account_no', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('IFSC_code', models.CharField(max_length=1000)),
                ('Branch', models.CharField(max_length=1000)),
                ('Current_amount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('Username', models.CharField(max_length=1000, primary_key=True, serialize=False, unique=True)),
                ('Password', models.CharField(max_length=1000, unique=True)),
                ('First_Name', models.CharField(max_length=1000, unique=True)),
                ('Last_Name', models.CharField(max_length=1000, unique=True)),
                ('Email_id', models.CharField(max_length=1000, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('Contact_no', models.CharField(max_length=13, unique=True)),
                ('Pan_card_no', models.CharField(max_length=1000, unique=True)),
                ('Address_Line', models.CharField(default='empty', max_length=5000)),
                ('State', models.CharField(max_length=1000)),
                ('city', models.CharField(max_length=1000)),
                ('District', models.CharField(max_length=1000)),
                ('Pin_code', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('Name', models.CharField(max_length=1000)),
                ('ISIN', models.IntegerField(primary_key=True, serialize=False)),
                ('Volume', models.IntegerField()),
                ('Prev_Close', models.FloatField()),
                ('Day_low', models.FloatField()),
                ('Current_price', models.FloatField()),
                ('Beta', models.FloatField()),
                ('Regular_market_open', models.FloatField()),
                ('Day_high', models.FloatField()),
                ('Open', models.FloatField()),
                ('Revenue_growth', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.IntegerField()),
                ('Date_of_Purchased', models.DateField()),
                ('Invested_Amt', models.FloatField()),
                ('Purchased_Value', models.FloatField()),
                ('Stock_ISIN', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='databases.stock')),
                ('User_Account_no', models.ForeignKey(default='empty', on_delete=django.db.models.deletion.CASCADE, to='databases.bank')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('Name', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('Sector', models.CharField(max_length=1000)),
                ('Industry', models.CharField(default='empty', max_length=10000)),
                ('Business_Summary', models.CharField(default='empty', max_length=10000)),
                ('Website', models.URLField(default='empty')),
                ('Gross_Profit', models.FloatField(default=0)),
                ('Stock_ISIN', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='databases.stock')),
            ],
        ),
        migrations.AddField(
            model_name='bank',
            name='Username',
            field=models.ForeignKey(default='empty', on_delete=django.db.models.deletion.CASCADE, to='databases.investor'),
        ),
    ]
